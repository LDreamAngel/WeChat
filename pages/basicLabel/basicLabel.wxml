<!--pages/basicLabel/basicLabel.wxml-->
<!--1. text 相当于web中的 span标签 行内元素 不会换行
2. view 相当于web中的 div标签 块级元素 会换行
3. checkbox 就等于之前web里面的复选框
-->

<!-- 1.字符串 -->
<view>{{msg}}</view>
<!-- 2.数字类型 -->
<view>加油，{{num}}%</view>
<!-- 3.数字类型 -->
<view>能否坚持下去？{{bol?'yes':'我还需要缓缓'}}</view>
<!-- 4.对象类型 -->
<view>姓名：{{myInfo.name}}</view>
<view>芳龄：{{myInfo.age}}</view>
<view>性别：{{myInfo.sex}}</view>
<!-- 5.自定义属性 -->
<view data-num = "{{num}}">这儿可以找到自定义属性哦！</view>
<!-- 
    6.使用bool类型充当属性  disabled="false"
     - 字符串和花括号之间一定不要存在空格，否则会导致识别失败
       错误示范：
        <checkbox checked="       {{isChecked}}" />
 -->
<checkbox class="" value="" checked="{{isChecked}}" color="#f0fff1"></checkbox>
<!-- 
    7.运算 => 表达式
     - 可以在花括号中加入 表达式 -- “语句”
     - 表达式
        指的是一些简单 运算 数字运算 字符串拼接 逻辑运算。。。
        ~ 数字的加减。。。
        ~ 字符串拼接
        ~ 三元表达式
     - 语句
       复杂的代码段
       ~ if else
       ~ switch
       ~ do while
       ~ for ...
 -->
<view>{{1+2}}</view>
<view>{{"1"+"2"}}</view>
<view>{{10%2 === 0? "偶数":"奇数"}}</view>
<!-- 
    8.列表循环
     - wx:for="{{数组或对象}}"  wx:for-item="循环项的名称"  wx:for-index="循环项的索引"
     - wx:key="唯一的值"  用来提高列表渲染的性能
        ~ wx:key 绑定一个普通的字符串的时候 那么这个字符串名称 肯定是 循环数组 中的 对象的 唯一属性
        ~ wx:key = "*this" 就表示 你的数组 是一个普通的数组 *this 表示是 循环项
        [2,3,2,1,3,4]
        ["1","fds","fdse","qew"]
     - 当出现 数组的嵌套循环的时候 尤其要注意 以下绑定的名称 不要重名
        wx:for-item="item" wx:for-index="index"
     - 默认情况下，我们不写  wx:for-item="item" wx:for-index="index"
        小程序循环的名称和索引的名称也是item和index
        因此，只有一层循环的话(wx:for-item="item" wx:for-index="index")可以省略

    9.对象循环
     - wx:for="{{数组或对象}}"  wx:for-item="对象的值"  wx:for-index="对象的属性"
     - 循环对象的时候，最好把item和index的名称都修改一下
       wx:for-item="value"  wx:for-index="key"
 -->

 <view>
     <view>列表循环</view>
     <view wx:for="{{list}}" wx:for-item="item" wx:for-index="index" wx:key="index">索引：{{index}}===>值：{{item.name}}</view>
 </view>
 <view>
    <view>对象循环</view>
    <view wx:for="{{myInfo}}" wx:for-item="value" wx:for-index="key" wx:key="key">属性：{{index}}===>值：{{value}}</view>
 </view>

<!-- 
    10.block标签
     - 占位符的标签
     - 写代码的时候 可以看到这个标签存在
     - 页面渲染小程序时会把它移出掉
        ~ wx:key 绑定一个普通的字符串的时候 那么这个字符串名称 肯定是 循环数组 中的 对象的 唯一属性
        ~ wx:key = "*this" 就表示 你的数组 是一个普通的数组 *this 表示是 循环项
 --> 
<block wx:for="{{list}}" wx:key="*this">占位符</block>
<!-- 
    11.条件渲染
     - wx:if="{{true/false}}"
        ~ if,else,if,else
          wx:if,  wx:elif,  wx:else
     - hidden
       ~ 在标签上直接加入属性 hidden
       ~ hidden="{{true}}"
     - 什么场景下用哪个
       ~ 当标签不是频繁的切换显示 优先使用 wx:if
         直接把标签从 页面结构给移出掉
       ~ 当标签频繁的切换显示 优先使用 hidden
         通过添加样式的方式来切换显示，当设置display的值不为none的时候，该显示隐藏会不起作用
 --> 
<view>
    <view>条件渲染</view>
    <view wx:if="{{false}}">显示or隐藏</view>
    <view wx:elif="{{false}}">elif</view>
    <view wx:else="{{true}}">else</view>
    <view>-------------分割线---------------</view>
    <view hidden >hidden</view>
</view>
  
